apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: observatorium-thanos-query-frontend
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: query-cache
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-query-frontend
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: v0.32.5
    name: observatorium-thanos-query-frontend
    namespace: rhobs
  spec:
    replicas: ${{QFE_REPLICAS}}
    selector:
      matchLabels:
        app.kubernetes.io/component: query-cache
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: thanos-query-frontend
        app.kubernetes.io/part-of: observatorium
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: query-cache
          app.kubernetes.io/instance: observatorium
          app.kubernetes.io/name: thanos-query-frontend
          app.kubernetes.io/part-of: observatorium
          app.kubernetes.io/version: v0.32.5
        namespace: rhobs
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                    - observatorium
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - thanos-query-frontend
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - query-frontend
          - --cache-compression-type=snappy
          - --labels.default-time-range=336h0m0s
          - --labels.max-retries-per-request=0
          - --labels.split-interval=24h0m0s
          - --log.format=logfmt
          - --log.level=${QFE_LOG_LEVEL}
          - --query-frontend.compress-responses
          - --query-frontend.downstream-url=http://observatorium-thanos-query.rhobs.svc.cluster.local:10902
          - --query-frontend.log-queries-longer-than=5s
          - --query-range.max-retries-per-request=0
          - |
            --query-range.response-cache-config=type: MEMCACHED
            config:
              addresses:
              - dnssrv+_client._tcp.observatorium-thanos-query-range-cache-memcached.rhobs.svc
              timeout: 2s
              max_idle_connections: 1300
              max_async_concurrency: 200
              max_async_buffer_size: 2000000
              max_get_multi_concurrency: 1000
              max_item_size: 64MiB
              max_get_multi_batch_size: 100
          - --query-range.split-interval=24h0m0s
          - |
            --tracing.config=type: JAEGER
            config:
              service_name: thanos-query-frontend
              sampler_type: ratelimiting
              sampler_param: 2
          env:
          - name: HOST_IP_ADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          image: quay.io/thanos/thanos:v0.32.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /-/healthy
              port: 10902
            periodSeconds: 30
            timeoutSeconds: 1
          name: thanos
          ports:
          - containerPort: 10902
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 20
            httpGet:
              path: /-/ready
              port: 10902
            periodSeconds: 5
          resources:
            limits:
              memory: ${QFE_MEMORY_LIMIT}
            requests:
              cpu: ${QFE_CPU_REQUEST}
              memory: ${QFE_MEMORY_REQUEST}
          terminationMessagePolicy: FallbackToLogsOnError
        - args:
          - -provider=openshift
          - -https-address=:8443
          - -http-address=
          - -email-domain=*
          - -upstream=http://localhost:10902
          - -openshift-service-account=observatorium-thanos-query-frontend
          - '-openshift-sar={"resource": "namespaces", "verb": "get", "name": "rhobs",
            "namespace": "rhobs"}'
          - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get",
            "name": "rhobs", "namespace": "rhobs"}}'
          - -tls-cert=/etc/tls/private/tls.crt
          - -tls-key=/etc/tls/private/tls.key
          - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
          - -cookie-secret=${OAUTH_PROXY_COOKIE_SECRET}
          - -openshift-ca=/etc/pki/tls/cert.pem
          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          image: quay.io/openshift/origin-oauth-proxy:4.15
          name: oauth-proxy
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/private
            name: tls
            readOnly: true
        - args:
          - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
          - --reporter.type=grpc
          - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          image: quay.io/app-sre/jaegertracing-jaeger-agent:1.22.0
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 14271
          name: jaeger-agent
          ports:
          - containerPort: 5778
            name: configs
            protocol: TCP
          - containerPort: 6831
            name: jaeger-thrift
            protocol: TCP
          - containerPort: 14271
            name: metrics
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 14271
            initialDelaySeconds: 1
          resources:
            limits:
              cpu: 128m
              memory: 128Mi
            requests:
              cpu: 32m
              memory: 64Mi
          terminationMessagePolicy: FallbackToLogsOnError
        nodeSelector:
          kubernetes.io/os: linux
        serviceAccountName: observatorium-thanos-query-frontend
        terminationGracePeriodSeconds: 120
        volumes:
        - name: tls
          secret:
            secretName: query-frontend-tls
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      cert-manager.io/issuer-kind: ClusterIssuer
      cert-manager.io/issuer-name: letsencrypt-prod-http
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: query-cache
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-query-frontend
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: v0.32.5
    name: observatorium-thanos-query-frontend
    namespace: rhobs
  spec:
    host: ""
    port:
      targetPort: https
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: reencrypt
    to:
      kind: Service
      name: observatorium-thanos-query-frontend
      weight: null
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: query-frontend-tls
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: query-cache
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-query-frontend
      app.kubernetes.io/part-of: observatorium
    name: observatorium-thanos-query-frontend
    namespace: rhobs
  spec:
    ports:
    - name: http
      port: 10902
      protocol: TCP
      targetPort: 10902
    - name: https
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app.kubernetes.io/component: query-cache
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-query-frontend
      app.kubernetes.io/part-of: observatorium
- apiVersion: v1
  imagePullSecrets:
  - name: quay.io
  kind: ServiceAccount
  metadata:
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.application: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"observatorium-thanos-query-frontend"}}'
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: query-cache
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-query-frontend
      app.kubernetes.io/part-of: observatorium
    name: observatorium-thanos-query-frontend
    namespace: rhobs
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: query-range-cache
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: memcached
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: "1.5"
    name: observatorium-thanos-query-range-cache-memcached
    namespace: rhobs
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: query-range-cache
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: memcached
        app.kubernetes.io/part-of: observatorium
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: query-range-cache
          app.kubernetes.io/instance: observatorium
          app.kubernetes.io/name: memcached
          app.kubernetes.io/part-of: observatorium
          app.kubernetes.io/version: "1.5"
        namespace: rhobs
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                    - observatorium
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - memcached
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --conn-limit=3072
          - --max-item-size=5m
          - --memory-limit=2048
          - --verbose=true
          image: quay.io/app-sre/memcached:1.5
          imagePullPolicy: IfNotPresent
          name: memcached
          ports:
          - containerPort: 11211
            name: client
            protocol: TCP
          resources:
            limits:
              memory: 3Gi
            requests:
              cpu: 500m
              memory: 2Gi
          terminationMessagePolicy: FallbackToLogsOnError
        - args:
          - --memcached.address=localhost:0
          - --web.listen-address=:9150
          image: quay.io/prometheus/memcached-exporter:v0.13.0
          imagePullPolicy: IfNotPresent
          name: memcached-exporter
          ports:
          - containerPort: 9150
            name: metrics
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 50m
              memory: 50Mi
          terminationMessagePolicy: FallbackToLogsOnError
        nodeSelector:
          kubernetes.io/os: linux
        serviceAccountName: observatorium-thanos-query-range-cache-memcached
        terminationGracePeriodSeconds: 120
- apiVersion: policy/v1
  kind: PodDisruptionBudget
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: query-range-cache
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: memcached
      app.kubernetes.io/part-of: observatorium
    name: observatorium-thanos-query-range-cache-memcached
    namespace: rhobs
  spec:
    maxUnavailable: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: query-range-cache
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: memcached
        app.kubernetes.io/part-of: observatorium
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: query-range-cache
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: memcached
      app.kubernetes.io/part-of: observatorium
    name: observatorium-thanos-query-range-cache-memcached
    namespace: rhobs
  spec:
    clusterIP: None
    ports:
    - name: client
      port: 11211
      protocol: TCP
      targetPort: 11211
    - name: metrics
      port: 9150
      protocol: TCP
      targetPort: 9150
    selector:
      app.kubernetes.io/component: query-range-cache
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: memcached
      app.kubernetes.io/part-of: observatorium
- apiVersion: v1
  imagePullSecrets:
  - name: quay.io
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: query-range-cache
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: memcached
      app.kubernetes.io/part-of: observatorium
    name: observatorium-thanos-query-range-cache-memcached
    namespace: rhobs
- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: query-cache
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-query-frontend
      app.kubernetes.io/part-of: observatorium
      prometheus: app-sre
    name: rhobs-observatorium-thanos-query-frontend
    namespace: openshift-customer-monitoring
  spec:
    endpoints:
    - port: http
      relabelings:
      - action: replace
        separator: /
        sourceLabels:
        - namespace
        - pod
        targetLabel: instance
    namespaceSelector:
      matchNames:
      - rhobs
    selector:
      matchLabels:
        app.kubernetes.io/component: query-cache
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: thanos-query-frontend
        app.kubernetes.io/part-of: observatorium
- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: query-range-cache
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: memcached
      app.kubernetes.io/part-of: observatorium
      prometheus: app-sre
    name: rhobs-observatorium-thanos-query-range-cache-memcached
    namespace: openshift-customer-monitoring
  spec:
    endpoints:
    - port: metrics
      relabelings:
      - action: replace
        separator: /
        sourceLabels:
        - namespace
        - pod
        targetLabel: instance
    namespaceSelector:
      matchNames:
      - rhobs
    selector:
      matchLabels:
        app.kubernetes.io/component: query-range-cache
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: memcached
        app.kubernetes.io/part-of: observatorium
parameters:
- from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: OAUTH_PROXY_COOKIE_SECRET
- name: QFE_CPU_REQUEST
  value: 100m
- name: QFE_LOG_LEVEL
  value: warn
- name: QFE_MEMORY_LIMIT
  value: 1Gi
- name: QFE_MEMORY_REQUEST
  value: 256Mi
- name: QFE_REPLICAS
  value: "1"
