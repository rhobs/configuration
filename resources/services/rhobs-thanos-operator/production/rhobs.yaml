apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: thanos-rhobs
objects:
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosStore
  metadata:
    creationTimestamp: null
    name: default
    namespace: rhobs-production
  spec:
    additionalArgs:
    - |-
      --tracing.config="config":
        "sampler_param": 2
        "sampler_type": "ratelimiting"
        "service_name": "thanos-store"
      "type": "JAEGER"
    additionalContainers:
    - args:
      - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
      - --reporter.type=grpc
      - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
      env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: POD
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      image: registry.redhat.io/rhosdt/jaeger-agent-rhel8:1.57.0-10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      name: jaeger-agent
      ports:
      - containerPort: 5778
        name: configs
      - containerPort: 6831
        name: jaeger-thrift
      - containerPort: 14271
        name: metrics
      readinessProbe:
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      resources:
        limits:
          cpu: 128m
          memory: 128Mi
        requests:
          cpu: 32m
          memory: 64Mi
    baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-thanos
    blockConfig:
      blockDiscoveryStrategy: concurrent
      blockFilesConcurrency: 1
      blockMetaFetchConcurrency: 32
    featureGates:
      serviceMonitor:
        enable: false
    ignoreDeletionMarksDelay: 24h
    imagePullPolicy: IfNotPresent
    indexHeaderConfig:
      enableLazyReader: true
      lazyDownloadStrategy: lazy
      lazyReaderIdleTimeout: 5m
    logFormat: logfmt
    logLevel: info
    maxTime: -22h
    objectStorageConfig:
      key: thanos.yaml
      name: observatorium-mst-thanos-objectstorage
      optional: false
    replicas: 3
    resourceRequirements:
      requests:
        cpu: 50m
        memory: 512Mi
    shardingStrategy:
      shards: 1
      type: block
    storageSize: 8Gi
    storeLimitsOptions: {}
    version: c7c3ef94c51d518bb6056d3ad416d7b4f39559f3
  status: {}
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosCompact
  metadata:
    creationTimestamp: null
    name: historic
    namespace: rhobs-production
  spec:
    baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-thanos
    compactConfig:
      compactConcurrency: 1
    debugConfig:
      acceptMalformedIndex: true
      haltOnError: true
      maxCompactionLevel: 5
    downsamplingConfig:
      downsamplingConcurrency: 1
      downsamplingEnabled: false
    featureGates:
      serviceMonitor:
        enable: false
    imagePullPolicy: IfNotPresent
    logFormat: logfmt
    logLevel: info
    maxTime: -2w
    minTime: -3650d
    objectStorageConfig:
      key: thanos.yaml
      name: thanos-objectstorage
      optional: false
    retentionConfig:
      fiveMinutes: 3650d
      oneHour: 3650d
      raw: 3650d
    storageSize: 500GB
    version: c7c3ef94c51d518bb6056d3ad416d7b4f39559f3
  status: {}
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosCompact
  metadata:
    creationTimestamp: null
    name: recent
    namespace: rhobs-production
  spec:
    baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-thanos
    compactConfig:
      compactConcurrency: 1
    debugConfig:
      acceptMalformedIndex: true
      haltOnError: true
      maxCompactionLevel: 3
    downsamplingConfig:
      downsamplingConcurrency: 1
      downsamplingEnabled: true
    featureGates:
      serviceMonitor:
        enable: false
    imagePullPolicy: IfNotPresent
    logFormat: logfmt
    logLevel: info
    maxTime: -2w
    objectStorageConfig:
      key: thanos.yaml
      name: thanos-objectstorage
      optional: false
    retentionConfig:
      fiveMinutes: 3650d
      oneHour: 3650d
      raw: 3650d
    storageSize: 50GB
    version: c7c3ef94c51d518bb6056d3ad416d7b4f39559f3
  status: {}
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosQuery
  metadata:
    annotations:
      service.beta.openshift.io/serving-cert-secret-name: query-frontend-tls
      serviceaccounts.openshift.io/oauth-redirectreference.application: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"thanos-query-frontend-rhobs"}}'
    creationTimestamp: null
    name: rhobs
    namespace: rhobs-production
  spec:
    additionalArgs:
    - |-
      --tracing.config="config":
        "sampler_param": 2
        "sampler_type": "ratelimiting"
        "service_name": "thanos-query"
      "type": "JAEGER"
    additionalContainers:
    - args:
      - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
      - --reporter.type=grpc
      - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
      env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: POD
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      image: registry.redhat.io/rhosdt/jaeger-agent-rhel8:1.57.0-10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      name: jaeger-agent
      ports:
      - containerPort: 5778
        name: configs
      - containerPort: 6831
        name: jaeger-thrift
      - containerPort: 14271
        name: metrics
      readinessProbe:
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      resources:
        limits:
          cpu: 128m
          memory: 128Mi
        requests:
          cpu: 32m
          memory: 64Mi
    baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-thanos
    customStoreLabelSelector:
      matchLabels:
        app.kubernetes.io/part-of: thanos
        operator.thanos.io/store-api: "true"
    featureGates:
      podDisruptionBudget:
        enable: false
      serviceMonitor:
        enable: false
    grpcProxyStrategy: lazy
    imagePullPolicy: IfNotPresent
    logFormat: logfmt
    logLevel: info
    queryFrontend:
      additionalArgs:
      - |-
        --tracing.config="config":
          "sampler_param": 2
          "sampler_type": "ratelimiting"
          "service_name": "thanos-query-frontend"
        "type": "JAEGER"
      additionalContainers:
      - args:
        - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
        - --reporter.type=grpc
        - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: registry.redhat.io/rhosdt/jaeger-agent-rhel8:1.57.0-10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: 14271
            scheme: HTTP
          initialDelaySeconds: 1
        name: jaeger-agent
        ports:
        - containerPort: 5778
          name: configs
        - containerPort: 6831
          name: jaeger-thrift
        - containerPort: 14271
          name: metrics
        readinessProbe:
          httpGet:
            path: /
            port: 14271
            scheme: HTTP
          initialDelaySeconds: 1
        resources:
          limits:
            cpu: 128m
            memory: 128Mi
          requests:
            cpu: 32m
            memory: 64Mi
      - args:
        - -provider=openshift
        - -https-address=:8443
        - -http-address=
        - -email-domain=*
        - -upstream=http://localhost:9090
        - -openshift-service-account=thanos-query-frontend-rhobs
        - '-openshift-sar={"resource": "namespaces", "verb": "get", "name": "rhobs-production",
          "namespace": "rhobs-production"}'
        - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get",
          "name": "rhobs-production", "namespace": "rhobs-production"}}'
        - -tls-cert=/etc/tls/private/tls.crt
        - -tls-key=/etc/tls/private/tls.key
        - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
        - -cookie-secret=${OAUTH_PROXY_COOKIE_SECRET}
        - -openshift-ca=/etc/pki/tls/cert.pem
        - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        image: registry.redhat.io/openshift4/ose-oauth-proxy:v4.14
        name: oauth-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/tls/private
          name: tls
          readOnly: true
      additionalServicePorts:
      - name: https
        port: 8443
        targetPort: 8443
      additionalVolumes:
      - name: tls
        secret:
          secretName: query-frontend-tls
      baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-thanos
      compressResponses: true
      imagePullPolicy: IfNotPresent
      labelsDefaultTimeRange: 336h
      labelsMaxRetries: 3
      labelsSplitInterval: 48h
      logFormat: logfmt
      logLevel: info
      logQueriesLongerThan: 10s
      queryLabelSelector:
        matchLabels:
          operator.thanos.io/query-api: "true"
      queryRangeMaxRetries: 3
      queryRangeSplitInterval: 48h
      replicas: 3
      resourceRequirements:
        requests:
          cpu: 100m
          memory: 500Mi
      version: c7c3ef94c51d518bb6056d3ad416d7b4f39559f3
    replicaLabels:
    - prometheus_replica
    - replica
    - rule_replica
    replicas: 6
    resourceRequirements:
      requests:
        cpu: 300m
        memory: 1Gi
    telemetryQuantiles:
      duration:
      - "0.1"
      - "0.25"
      - "0.75"
      - "1.25"
      - "1.75"
      - "2.5"
      - "3"
      - "5"
      - "10"
      - "15"
      - "30"
      - "60"
      - "120"
    version: c7c3ef94c51d518bb6056d3ad416d7b4f39559f3
    webConfig:
      prefixHeader: X-Forwarded-Prefix
  status: {}
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosStore
  metadata:
    creationTimestamp: null
    name: telemeter-0to2w
    namespace: rhobs-production
  spec:
    additionalArgs:
    - |-
      --tracing.config="config":
        "sampler_param": 2
        "sampler_type": "ratelimiting"
        "service_name": "thanos-store"
      "type": "JAEGER"
    additionalContainers:
    - args:
      - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
      - --reporter.type=grpc
      - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
      env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: POD
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      image: registry.redhat.io/rhosdt/jaeger-agent-rhel8:1.57.0-10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      name: jaeger-agent
      ports:
      - containerPort: 5778
        name: configs
      - containerPort: 6831
        name: jaeger-thrift
      - containerPort: 14271
        name: metrics
      readinessProbe:
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      resources:
        limits:
          cpu: 128m
          memory: 128Mi
        requests:
          cpu: 32m
          memory: 64Mi
    baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-thanos
    blockConfig:
      blockDiscoveryStrategy: concurrent
      blockFilesConcurrency: 1
      blockMetaFetchConcurrency: 32
    featureGates:
      serviceMonitor:
        enable: false
    ignoreDeletionMarksDelay: 24h
    imagePullPolicy: IfNotPresent
    indexHeaderConfig:
      enableLazyReader: true
      lazyDownloadStrategy: lazy
      lazyReaderIdleTimeout: 5m
    logFormat: logfmt
    logLevel: info
    maxTime: -2w
    objectStorageConfig:
      key: thanos.yaml
      name: thanos-objectstorage
      optional: false
    replicas: 3
    resourceRequirements:
      requests:
        cpu: 50m
        memory: 512Mi
    shardingStrategy:
      shards: 1
      type: block
    storageSize: 8Gi
    storeLimitsOptions:
      storeLimitsRequestSamples: 627040000
      storeLimitsRequestSeries: 1000000
    version: c7c3ef94c51d518bb6056d3ad416d7b4f39559f3
  status: {}
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosStore
  metadata:
    creationTimestamp: null
    name: telemeter-2wto90d
    namespace: rhobs-production
  spec:
    additionalArgs:
    - |-
      --tracing.config="config":
        "sampler_param": 2
        "sampler_type": "ratelimiting"
        "service_name": "thanos-store"
      "type": "JAEGER"
    additionalContainers:
    - args:
      - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
      - --reporter.type=grpc
      - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
      env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: POD
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      image: registry.redhat.io/rhosdt/jaeger-agent-rhel8:1.57.0-10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      name: jaeger-agent
      ports:
      - containerPort: 5778
        name: configs
      - containerPort: 6831
        name: jaeger-thrift
      - containerPort: 14271
        name: metrics
      readinessProbe:
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      resources:
        limits:
          cpu: 128m
          memory: 128Mi
        requests:
          cpu: 32m
          memory: 64Mi
    baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-thanos
    blockConfig:
      blockDiscoveryStrategy: concurrent
      blockFilesConcurrency: 1
      blockMetaFetchConcurrency: 32
    featureGates:
      podDisruptionBudget:
        enable: false
      serviceMonitor:
        enable: false
    ignoreDeletionMarksDelay: 24h
    imagePullPolicy: IfNotPresent
    indexHeaderConfig:
      enableLazyReader: true
      lazyDownloadStrategy: lazy
      lazyReaderIdleTimeout: 5m
    logFormat: logfmt
    logLevel: info
    maxTime: -2w
    minTime: -90d
    objectStorageConfig:
      key: thanos.yaml
      name: thanos-objectstorage
      optional: false
    replicas: 3
    resourceRequirements:
      requests:
        cpu: 50m
        memory: 512Mi
    shardingStrategy:
      shards: 1
      type: block
    storageSize: 8Gi
    storeLimitsOptions:
      storeLimitsRequestSamples: 627040000
      storeLimitsRequestSeries: 1000000
    version: c7c3ef94c51d518bb6056d3ad416d7b4f39559f3
  status: {}
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosStore
  metadata:
    creationTimestamp: null
    name: telemeter-90dplus
    namespace: rhobs-production
  spec:
    additionalArgs:
    - |-
      --tracing.config="config":
        "sampler_param": 2
        "sampler_type": "ratelimiting"
        "service_name": "thanos-store"
      "type": "JAEGER"
    additionalContainers:
    - args:
      - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
      - --reporter.type=grpc
      - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
      env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: POD
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      image: registry.redhat.io/rhosdt/jaeger-agent-rhel8:1.57.0-10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      name: jaeger-agent
      ports:
      - containerPort: 5778
        name: configs
      - containerPort: 6831
        name: jaeger-thrift
      - containerPort: 14271
        name: metrics
      readinessProbe:
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      resources:
        limits:
          cpu: 128m
          memory: 128Mi
        requests:
          cpu: 32m
          memory: 64Mi
    baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-thanos
    blockConfig:
      blockDiscoveryStrategy: concurrent
      blockFilesConcurrency: 1
      blockMetaFetchConcurrency: 32
    featureGates:
      serviceMonitor:
        enable: false
    ignoreDeletionMarksDelay: 24h
    imagePullPolicy: IfNotPresent
    indexHeaderConfig:
      enableLazyReader: true
      lazyDownloadStrategy: lazy
      lazyReaderIdleTimeout: 5m
    logFormat: logfmt
    logLevel: info
    minTime: -90d
    objectStorageConfig:
      key: thanos.yaml
      name: thanos-objectstorage
      optional: false
    replicas: 3
    resourceRequirements:
      requests:
        cpu: 50m
        memory: 512Mi
    shardingStrategy:
      shards: 1
      type: block
    storageSize: 8Gi
    storeLimitsOptions:
      storeLimitsRequestSamples: 627040000
      storeLimitsRequestSeries: 1000000
    version: c7c3ef94c51d518bb6056d3ad416d7b4f39559f3
  status: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/part-of: thanos
    name: thanos-query-frontend-rhobs
    namespace: rhobs-production
  spec:
    host: ""
    port:
      targetPort: https
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: reencrypt
    to:
      kind: Service
      name: thanos-query-frontend-rhobs
      weight: 100
  status:
    ingress: null
parameters:
- from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: OAUTH_PROXY_COOKIE_SECRET
