apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: thanos-rhobs
objects:
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosStore
  metadata:
    creationTimestamp: null
    name: default
    namespace: rhobs-production
  spec:
    additionalArgs:
    - |-
      --index-cache.config="config":
        "max_size": "10000MB"
        "max_item_size": "1000MB"
      "type": "IN-MEMORY"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: workload-type
              operator: In
              values:
              - query
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/instance
              operator: In
              values:
              - default
          topologyKey: kubernetes.io/hostname
    baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-konflux-thanos
    blockConfig:
      blockDiscoveryStrategy: concurrent
      blockFilesConcurrency: 1
      blockMetaFetchConcurrency: 32
    featureGates:
      serviceMonitor:
        enable: false
    ignoreDeletionMarksDelay: 24h
    imagePullPolicy: IfNotPresent
    indexHeaderConfig:
      enableLazyReader: true
      lazyDownloadStrategy: lazy
      lazyReaderIdleTimeout: 5m
    logFormat: logfmt
    logLevel: debug
    maxTime: -22h
    objectStorageConfig:
      key: thanos.yaml
      name: observatorium-mst-thanos-objectstorage
      optional: false
    replicas: 2
    resourceRequirements:
      requests:
        cpu: 50m
        memory: 512Mi
    shardingStrategy:
      shards: 1
      type: block
    storageSize: 300Gi
    storeLimitsOptions: {}
    version: 03c9fefbda1b33830a950bd28484fa0a1e039555
  status: {}
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosCompact
  metadata:
    creationTimestamp: null
    name: receive
    namespace: rhobs-production
  spec:
    additionalArgs:
    - --deduplication.replica-label=replica
    baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-konflux-thanos
    compactConfig:
      blockFetchConcurrency: 4
      compactConcurrency: 4
    debugConfig:
      acceptMalformedIndex: true
      haltOnError: true
      maxCompactionLevel: 4
    downsamplingConfig:
      downsamplingConcurrency: 4
      downsamplingEnabled: false
    featureGates:
      serviceMonitor:
        enable: false
    imagePullPolicy: IfNotPresent
    logFormat: logfmt
    logLevel: info
    maxTime: -120d
    objectStorageConfig:
      key: thanos.yaml
      name: thanos-objectstorage
      optional: false
    retentionConfig:
      fiveMinutes: 3650d
      oneHour: 3650d
      raw: 3650d
    shardingConfig:
    - externalLabelSharding:
      - label: receive
        value: "true"
      - label: tenant_id
        value: FB870BF3-9F3A-44FF-9BF7-D7A047A52F43
      shardName: telemeter
    storageSize: 3000Gi
    version: 03c9fefbda1b33830a950bd28484fa0a1e039555
  status: {}
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosCompact
  metadata:
    creationTimestamp: null
    name: receive
    namespace: rhobs-production
  spec:
    additionalArgs:
    - --deduplication.replica-label=replica
    baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-konflux-thanos
    compactConfig:
      blockFetchConcurrency: 4
      compactConcurrency: 4
    debugConfig:
      acceptMalformedIndex: true
      haltOnError: true
      maxCompactionLevel: 4
    downsamplingConfig:
      downsamplingConcurrency: 4
      downsamplingEnabled: false
    featureGates:
      serviceMonitor:
        enable: false
    imagePullPolicy: IfNotPresent
    logFormat: logfmt
    logLevel: info
    minTime: -61d
    objectStorageConfig:
      key: thanos.yaml
      name: thanos-objectstorage
      optional: false
    retentionConfig:
      fiveMinutes: 3650d
      oneHour: 3650d
      raw: 3650d
    shardingConfig:
    - externalLabelSharding:
      - label: receive
        value: "true"
      - label: tenant_id
        value: FB870BF3-9F3A-44FF-9BF7-D7A047A52F43
      shardName: telemeter
    storageSize: 3000Gi
    version: 03c9fefbda1b33830a950bd28484fa0a1e039555
  status: {}
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosQuery
  metadata:
    annotations:
      service.beta.openshift.io/serving-cert-secret-name: query-frontend-tls
      serviceaccounts.openshift.io/oauth-redirectreference.application: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"thanos-query-frontend-rhobs"}}'
    creationTimestamp: null
    name: rhobs
    namespace: rhobs-production
  spec:
    additionalArgs:
    - --rule=dnssrv+_grpc._tcp.observatorium-thanos-rule.observatorium-metrics-production.svc.cluster.local
    - --endpoint=dnssrv+_grpc._tcp.observatorium-thanos-receive-default.observatorium-metrics-production.svc.cluster.local
    baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-konflux-thanos
    customStoreLabelSelector:
      matchLabels:
        app.kubernetes.io/part-of: thanos
        operator.thanos.io/store-api: "true"
    featureGates:
      podDisruptionBudget:
        enable: false
      serviceMonitor:
        enable: false
    grpcProxyStrategy: lazy
    imagePullPolicy: IfNotPresent
    logFormat: logfmt
    logLevel: debug
    queryFrontend:
      additionalContainers:
      - args:
        - -provider=openshift
        - -https-address=:8443
        - -http-address=
        - -email-domain=*
        - -upstream=http://localhost:9090
        - -openshift-service-account=thanos-query-frontend-rhobs
        - '-openshift-sar={"resource": "namespaces", "verb": "get", "name": "rhobs-production",
          "namespace": "rhobs-production"}'
        - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get",
          "name": "rhobs-production", "namespace": "rhobs-production"}}'
        - -tls-cert=/etc/tls/private/tls.crt
        - -tls-key=/etc/tls/private/tls.key
        - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
        - -cookie-secret=${OAUTH_PROXY_COOKIE_SECRET}
        - -openshift-ca=/etc/pki/tls/cert.pem
        - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        image: registry.redhat.io/openshift4/ose-oauth-proxy:v4.14
        name: oauth-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/tls/private
          name: tls
          readOnly: true
      additionalServicePorts:
      - name: https
        port: 8443
        targetPort: 8443
      additionalVolumes:
      - name: tls
        secret:
          secretName: query-frontend-tls
      baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-konflux-thanos
      compressResponses: true
      imagePullPolicy: IfNotPresent
      labelsDefaultTimeRange: 336h
      labelsMaxRetries: 3
      labelsSplitInterval: 48h
      logFormat: logfmt
      logLevel: debug
      logQueriesLongerThan: 10s
      queryLabelSelector:
        matchLabels:
          operator.thanos.io/query-api: "true"
      queryRangeMaxRetries: 3
      queryRangeSplitInterval: 48h
      replicas: 3
      resourceRequirements:
        requests:
          cpu: 100m
          memory: 500Mi
      version: 03c9fefbda1b33830a950bd28484fa0a1e039555
    replicaLabels:
    - prometheus_replica
    - replica
    - rule_replica
    replicas: 3
    resourceRequirements:
      requests:
        cpu: 300m
        memory: 1Gi
    telemetryQuantiles:
      duration:
      - "0.1"
      - "0.25"
      - "0.75"
      - "1.25"
      - "1.75"
      - "2.5"
      - "3"
      - "5"
      - "10"
      - "15"
      - "30"
      - "60"
      - "120"
    version: 03c9fefbda1b33830a950bd28484fa0a1e039555
    webConfig:
      prefixHeader: X-Forwarded-Prefix
  status: {}
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosCompact
  metadata:
    creationTimestamp: null
    name: rules-and-rhobs
    namespace: rhobs-production
  spec:
    additionalArgs:
    - --deduplication.replica-label=replica
    baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-konflux-thanos
    compactConfig:
      blockFetchConcurrency: 8
      compactConcurrency: 8
    debugConfig:
      acceptMalformedIndex: true
      haltOnError: false
      maxCompactionLevel: 4
    downsamplingConfig:
      downsamplingConcurrency: 4
      downsamplingEnabled: false
    featureGates:
      serviceMonitor:
        enable: false
    imagePullPolicy: IfNotPresent
    logFormat: logfmt
    logLevel: warn
    objectStorageConfig:
      key: thanos.yaml
      name: thanos-objectstorage
      optional: false
    retentionConfig:
      fiveMinutes: 3650d
      oneHour: 3650d
      raw: 3650d
    shardingConfig:
    - externalLabelSharding:
      - label: receive
        value: "true"
      - label: tenant_id
        value: 0fc2b00e-201b-4c17-b9f2-19d91adc4fd2
      shardName: rhobs
    - externalLabelSharding:
      - label: receive
        value: '!true'
      shardName: rules
    storageSize: 500Gi
    version: 03c9fefbda1b33830a950bd28484fa0a1e039555
  status: {}
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosStore
  metadata:
    creationTimestamp: null
    name: telemeter-0to2w
    namespace: rhobs-production
  spec:
    additionalArgs:
    - |-
      --index-cache.config="config":
        "max_size": "10000MB"
        "max_item_size": "1000MB"
      "type": "IN-MEMORY"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: workload-type
              operator: In
              values:
              - query
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/instance
              operator: In
              values:
              - telemeter-0to2w
          topologyKey: kubernetes.io/hostname
    baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-konflux-thanos
    blockConfig:
      blockDiscoveryStrategy: concurrent
      blockFilesConcurrency: 1
      blockMetaFetchConcurrency: 32
    featureGates:
      serviceMonitor:
        enable: false
    ignoreDeletionMarksDelay: 12h
    imagePullPolicy: IfNotPresent
    indexHeaderConfig:
      enableLazyReader: true
      lazyReaderIdleTimeout: 5m
    logFormat: logfmt
    logLevel: debug
    minTime: -336h
    objectStorageConfig:
      key: thanos.yaml
      name: thanos-objectstorage
      optional: false
    replicas: 2
    resourceRequirements:
      requests:
        cpu: 50m
        memory: 512Mi
    shardingStrategy:
      shards: 1
      type: block
    storageSize: 300Gi
    storeLimitsOptions: {}
    version: 03c9fefbda1b33830a950bd28484fa0a1e039555
  status: {}
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosStore
  metadata:
    creationTimestamp: null
    name: telemeter-2wto90d
    namespace: rhobs-production
  spec:
    additionalArgs:
    - |-
      --index-cache.config="config":
        "max_size": "10000MB"
        "max_item_size": "1000MB"
      "type": "IN-MEMORY"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: workload-type
              operator: In
              values:
              - query
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/instance
              operator: In
              values:
              - telemeter-2wto90d
          topologyKey: kubernetes.io/hostname
    baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-konflux-thanos
    blockConfig:
      blockDiscoveryStrategy: concurrent
      blockFilesConcurrency: 1
      blockMetaFetchConcurrency: 32
    featureGates:
      podDisruptionBudget:
        enable: false
      serviceMonitor:
        enable: false
    ignoreDeletionMarksDelay: 24h
    imagePullPolicy: IfNotPresent
    indexHeaderConfig:
      enableLazyReader: true
      lazyDownloadStrategy: lazy
      lazyReaderIdleTimeout: 5m
    logFormat: logfmt
    logLevel: debug
    maxTime: -336h
    minTime: -2160h
    objectStorageConfig:
      key: thanos.yaml
      name: thanos-objectstorage
      optional: false
    replicas: 2
    resourceRequirements:
      requests:
        cpu: 50m
        memory: 512Mi
    shardingStrategy:
      shards: 1
      type: block
    storageSize: 300Gi
    storeLimitsOptions: {}
    version: 03c9fefbda1b33830a950bd28484fa0a1e039555
  status: {}
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosStore
  metadata:
    creationTimestamp: null
    name: telemeter-90dplus
    namespace: rhobs-production
  spec:
    additionalArgs:
    - |-
      --index-cache.config="config":
        "max_size": "10000MB"
        "max_item_size": "1000MB"
      "type": "IN-MEMORY"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: workload-type
              operator: In
              values:
              - query
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/instance
              operator: In
              values:
              - telemeter-90dplus
          topologyKey: kubernetes.io/hostname
    baseImage: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-konflux-thanos
    blockConfig:
      blockDiscoveryStrategy: concurrent
      blockFilesConcurrency: 1
      blockMetaFetchConcurrency: 32
    featureGates:
      serviceMonitor:
        enable: false
    ignoreDeletionMarksDelay: 24h
    imagePullPolicy: IfNotPresent
    indexHeaderConfig:
      enableLazyReader: true
      lazyDownloadStrategy: lazy
      lazyReaderIdleTimeout: 5m
    logFormat: logfmt
    logLevel: debug
    maxTime: -2160h
    minTime: -8760h
    objectStorageConfig:
      key: thanos.yaml
      name: thanos-objectstorage
      optional: false
    replicas: 1
    resourceRequirements:
      requests:
        cpu: 50m
        memory: 512Mi
    shardingStrategy:
      shards: 1
      type: block
    storageSize: 300Gi
    storeLimitsOptions: {}
    version: 03c9fefbda1b33830a950bd28484fa0a1e039555
  status: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/part-of: thanos
    name: thanos-query-frontend-rhobs
    namespace: rhobs-production
  spec:
    host: ""
    port:
      targetPort: https
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: reencrypt
    to:
      kind: Service
      name: thanos-query-frontend-rhobs
      weight: 100
  status:
    ingress: null
parameters:
- from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: OAUTH_PROXY_COOKIE_SECRET
