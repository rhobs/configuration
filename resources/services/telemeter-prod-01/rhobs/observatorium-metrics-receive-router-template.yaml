apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: observatorium-thanos-receive-router
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: kubernetes-controller
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-receive-controller
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: main-2023-09-22-f168dd7
    name: observatorium-thanos-receive-controller
    namespace: rhobs
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: kubernetes-controller
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: thanos-receive-controller
        app.kubernetes.io/part-of: observatorium
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: kubernetes-controller
          app.kubernetes.io/instance: observatorium
          app.kubernetes.io/name: thanos-receive-controller
          app.kubernetes.io/part-of: observatorium
          app.kubernetes.io/version: main-2023-09-22-f168dd7
        namespace: rhobs
      spec:
        containers:
        - args:
          - --configmap-name=thanos-receive-hashring
          - --configmap-generated-name=thanos-receive-hashring-generated
          - --file-name=hashrings.json
          - --namespace=rhobs
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: quay.io/observatorium/thanos-receive-controller:main-2023-09-22-f168dd7
          imagePullPolicy: IfNotPresent
          name: observatorium-thanos-receive-controller
          resources:
            limits:
              cpu: 24Mi
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64m
          terminationMessagePolicy: FallbackToLogsOnError
        nodeSelector:
          kubernetes.io/os: linux
        serviceAccountName: observatorium-thanos-receive-controller
        terminationGracePeriodSeconds: 0
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: kubernetes-controller
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-receive-controller
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: main-2023-09-22-f168dd7
    name: observatorium-thanos-receive-controller
    namespace: rhobs
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - list
    - watch
    - get
    - create
    - update
    - delete
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - update
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - list
    - watch
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: kubernetes-controller
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-receive-controller
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: main-2023-09-22-f168dd7
    name: observatorium-thanos-receive-controller
    namespace: rhobs
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: observatorium-thanos-receive-controller
  subjects:
  - kind: ServiceAccount
    name: observatorium-thanos-receive-controller
    namespace: rhobs
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: kubernetes-controller
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-receive-controller
      app.kubernetes.io/part-of: observatorium
    name: observatorium-thanos-receive-controller
    namespace: rhobs
- apiVersion: v1
  data:
    limits.yaml: |
      write:
        global:
          meta_monitoring_url: http://prometheus-app-sre.openshift-customer-monitoring.svc.cluster.local:9090
          meta_monitoring_limit_query: sum(prometheus_tsdb_head_series{namespace="rhobs"})
            by (tenant)
        tenants:
          1b9b6e43-9128-4bbf-bfff-3c120bbe6f11:
            head_series_limit: 10000000
          0031e8d6-e50a-47ea-aecb-c7e0bd84b3f1:
            head_series_limit: 400000
          72e6f641-b2e2-47eb-bbc2-fee3c8fbda26:
            request:
              series_limit: 10
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: database-write-hashring-router
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-receive-router
      app.kubernetes.io/part-of: observatorium
    name: observatorium-thanos-receive-router-limits
    namespace: rhobs
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: database-write-hashring-router
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-receive-router
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: v0.32.4
    name: observatorium-thanos-receive-router
    namespace: rhobs
  spec:
    replicas: ${{ROUTER_REPLICAS}}
    selector:
      matchLabels:
        app.kubernetes.io/component: database-write-hashring-router
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: thanos-receive-router
        app.kubernetes.io/part-of: observatorium
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: database-write-hashring-router
          app.kubernetes.io/instance: observatorium
          app.kubernetes.io/name: thanos-receive-router
          app.kubernetes.io/part-of: observatorium
          app.kubernetes.io/version: v0.32.4
        namespace: rhobs
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                    - observatorium
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - thanos-receive-router
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - receive
          - --grpc-address=0.0.0.0:10901
          - --http-address=0.0.0.0:10902
          - --label=receive="true"
          - --log.format=logfmt
          - --log.level=${ROUTER_LOG_LEVEL}
          - --receive.hashrings-algorithm=ketama
          - --receive.hashrings-file=/etc/thanos/hashring/hashrings.json
          - --receive.hashrings-file-refresh-interval=5s
          - --receive.limits-config-file=/etc/thanos/receive-limits/limits.yaml
          - --remote-write.address=0.0.0.0:19291
          - |
            --tracing.config=type: JAEGER
            config:
              service_name: thanos-receive-router
              sampler_type: ratelimiting
              sampler_param: 2
          image: quay.io/thanos/thanos:v0.32.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /-/healthy
              port: 10902
            periodSeconds: 30
            timeoutSeconds: 1
          name: thanos
          ports:
          - containerPort: 10902
            name: http
            protocol: TCP
          - containerPort: 10901
            name: grpc
            protocol: TCP
          - containerPort: 19291
            name: remote-write
            protocol: TCP
          readinessProbe:
            failureThreshold: 20
            httpGet:
              path: /-/ready
              port: 10902
            initialDelaySeconds: 60
            periodSeconds: 5
          resources:
            limits:
              memory: ${ROUTER_MEMORY_LIMIT}
            requests:
              cpu: ${ROUTER_CPU_REQUEST}
              memory: ${ROUTER_MEMORY_REQUEST}
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/thanos/hashring
            name: hashring
            readOnly: true
          - mountPath: /etc/thanos/receive-limits
            name: receive-limits
            readOnly: true
        - args:
          - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
          - --reporter.type=grpc
          - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          image: quay.io/app-sre/jaegertracing-jaeger-agent:1.22.0
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 14271
          name: jaeger-agent
          ports:
          - containerPort: 5778
            name: configs
            protocol: TCP
          - containerPort: 6831
            name: jaeger-thrift
            protocol: TCP
          - containerPort: 14271
            name: metrics
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 14271
            initialDelaySeconds: 1
          resources:
            limits:
              cpu: 128m
              memory: 128Mi
            requests:
              cpu: 32m
              memory: 64Mi
          terminationMessagePolicy: FallbackToLogsOnError
        nodeSelector:
          kubernetes.io/os: linux
        serviceAccountName: observatorium-thanos-receive-router
        terminationGracePeriodSeconds: 120
        volumes:
        - configMap:
            name: thanos-receive-hashring-generated
          name: hashring
        - configMap:
            name: observatorium-thanos-receive-router-limits
          name: receive-limits
- apiVersion: policy/v1
  kind: PodDisruptionBudget
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: database-write-hashring-router
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-receive-router
      app.kubernetes.io/part-of: observatorium
    name: observatorium-thanos-receive-router
    namespace: rhobs
  spec:
    maxUnavailable: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: database-write-hashring-router
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: thanos-receive-router
        app.kubernetes.io/part-of: observatorium
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: database-write-hashring-router
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-receive-router
      app.kubernetes.io/part-of: observatorium
    name: observatorium-thanos-receive-router
    namespace: rhobs
  spec:
    ports:
    - name: http
      port: 10902
      protocol: TCP
      targetPort: 10902
    - name: grpc
      port: 10901
      protocol: TCP
      targetPort: 10901
    - name: remote-write
      port: 19291
      protocol: TCP
      targetPort: 19291
    selector:
      app.kubernetes.io/component: database-write-hashring-router
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-receive-router
      app.kubernetes.io/part-of: observatorium
- apiVersion: v1
  imagePullSecrets:
  - name: quay.io
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: database-write-hashring-router
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-receive-router
      app.kubernetes.io/part-of: observatorium
    name: observatorium-thanos-receive-router
    namespace: rhobs
- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: database-write-hashring-router
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-receive-router
      app.kubernetes.io/part-of: observatorium
      prometheus: app-sre
    name: rhobs-observatorium-thanos-receive-router
    namespace: openshift-customer-monitoring
  spec:
    endpoints:
    - port: http
      relabelings:
      - action: replace
        separator: /
        sourceLabels:
        - namespace
        - pod
        targetLabel: instance
    namespaceSelector:
      matchNames:
      - rhobs
    selector:
      matchLabels:
        app.kubernetes.io/component: database-write-hashring-router
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: thanos-receive-router
        app.kubernetes.io/part-of: observatorium
- apiVersion: v1
  data:
    hashrings.json: '[{"hashring":"default","tenants":["3833951d-bede-4a53-85e5-f73f4913973f","9ca26972-4328-4fe3-92db-31302013d03f","AC879303-C60F-4D0D-A6D5-A485CFD638B8","99c885bc-2d64-4c4d-b55e-8bf30d98c657","770c1124-6ae8-4324-a9d4-9ce08590094b","37b8fd3f-56ff-4b64-8272-917c9b0d1623","d17ea8ce-d4c6-42ef-b259-7d10c9227e93","1b9b6e43-9128-4bbf-bfff-3c120bbe6f11","0fc2b00e-201b-4c17-b9f2-19d91adc4fd2","8ace13a2-1c72-4559-b43d-ab43e32a255a","0031e8d6-e50a-47ea-aecb-c7e0bd84b3f1"],"algorithm":"ketama"},{"hashring":"rhel","tenants":["72e6f641-b2e2-47eb-bbc2-fee3c8fbda26"],"algorithm":"ketama"},{"hashring":"telemeter","tenants":["FB870BF3-9F3A-44FF-9BF7-D7A047A52F43"],"algorithm":"ketama"}]'
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: kubernetes-controller
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-receive-controller
      app.kubernetes.io/part-of: observatorium
    name: thanos-receive-hashring
    namespace: rhobs
parameters:
- name: ROUTER_CPU_REQUEST
  value: 200m
- name: ROUTER_LOG_LEVEL
  value: warn
- name: ROUTER_MEMORY_LIMIT
  value: 10Gi
- name: ROUTER_MEMORY_REQUEST
  value: 3Gi
- name: ROUTER_REPLICAS
  value: "1"
